---

- name: Restart with Empty Database
  block:
    - name: Retrieving the Current Software Image
      include_tasks: retrieve_sw_info.yml

    - name: Initiating Restart
      infn_tl1:
        provider: "{{ tl1 }}"
        commands_and_inputs: "{{ lookup('template', 'restart_with_emptydb.j2') }}"
        output: "json"
        save: "{{ module_save_file | default('infn_tl1') }}.txt"
      register: restart_emptydb_res
      changed_when: restart_emptydb_res.status == 'SUCCESS'
      failed_when: restart_emptydb_res.status == 'FAILURE'
    
    - name: Pausing for "{{ sw_configs.restart_with_emptydb_wait_time | default(restart_with_emptydb_wait_time) }}" minute(s)
      pause:
        minutes: "{{ sw_configs.restart_with_emptydb_wait_time | default(restart_with_emptydb_wait_time) }}"

    - name: Checking if the Network Element is reachable
      include_tasks: availability.yml
     
    - name: Retrieving Software Image(s) Information with Existing User Credentials
      infn_tl1:
        provider: "{{ tl1 }}"
        commands_and_inputs: "{%- set command_ip_map = {} -%}{%- set cmd = 'RTRV-RFILE:%s::CTAG:::TYPE=SW;' | format(TID) -%}{%- set dummy = command_ip_map.update({cmd: {}}) -%}{{- command_ip_map -}}"
        output: "json"
        save: "{{ module_save_file | default('infn_tl1') }}.txt"
      register: chk_rtrv_sw_info_res
      changed_when: false
      failed_when: false

    - name: Renaming Raw Response Parameters
      infn_mapper:
        mapper: "{{ sw_mapper }}"
        tl1_response: "{{ chk_rtrv_sw_info_res }}"
      register: mapped_chk_rtrv_sw_info_res
      when:
        - sw_mapper is defined

    - name: Result of the retrieval
      debug:
        msg: "{%- if mapped_chk_rtrv_sw_info_res.skipped | default(false) -%}{{- chk_rtrv_sw_info_res -}}{%- else -%}{{- mapped_chk_rtrv_sw_info_res -}}{%- endif -%} "

    - name: Checking if Restart With Empty DB is Successful
      set_fact:
        restart_with_emptydb_status: "{{ lookup('template', 'restart_with_emptydb_status.j2') }}"

    - name: Summary of Restart With Empty DB
      debug:
        msg: "{{ restart_with_emptydb_status }}"
      failed_when: restart_with_emptydb_status.status == "FAILURE"